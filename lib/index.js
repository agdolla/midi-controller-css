'use babel';

import { CompositeDisposable } from 'atom';

import actions from './actions';
import getFocusNode from './get-focus-node';
import focusSelector from './focus-selector';
import addLine from './add-line';
import deleteLine from './delete-line';

var finalOutput;
export default {

    subscriptions: null,
    midi: null,

    activate(state) {

        this.subscriptions = new CompositeDisposable();

        this.subscriptions.add(atom.commands.add('atom-workspace', {
            'midi:convert': () => this.convert()
        }));

        if (navigator.requestMIDIAccess) {
            navigator.requestMIDIAccess({
                sysex: true
            }).then(function(midiAccess) {

                var inputs = midiAccess.inputs.values();
                for (var input = inputs.next(); input && !input.done; input = inputs.next()) {
                    input.value.onmidimessage = actions.bind(this);
                }

                var outputs = midiAccess.outputs.values();
                for (var output = outputs.next(); output && !output.done; output = outputs.next()) {
                    finalOutput = output;
                    // Inquiry Message Request
                    finalOutput.value.send([0xF0,0x7E,0x7F,0x06,0x01,0xF7]);
                    // (4) Mode Request
                    finalOutput.value.send([0xF0,0x42,0x40,0x00,0x01,0x13,0x00,0x1F,0x12,0x00,0xF7]);
                    // Inquiry Message Request
                    finalOutput.value.send([0xF0,0x7E,0x7F,0x06,0x01,0xF7]);
                    // (5) Current Scene Data Dump
                    finalOutput.value.send([0xF0,0x42,0x40,0x00,0x01,0x13,0x00,0x7F,0x7F,0x02,0x03,0x05,0x40,0x00,0x00,0x00,
                        0x01,0x10,0x01,0x00,0x00,0x00,0x00,0x7F,0x00,0x01,0x00,0x10,0x00,0x00,0x7F,0x00,
                        0x01,0x00,0x20,0x00,0x7F,0x00,0x00,0x01,0x00,0x30,0x00,0x7F,0x00,0x00,0x01,0x00,
                        0x40,0x00,0x7F,0x00,0x10,0x00,0x01,0x00,0x01,0x00,0x7F,0x00,0x01,0x00,0x00,0x11,
                        0x00,0x7F,0x00,0x01,0x00,0x00,0x21,0x00,0x7F,0x00,0x01,0x00,0x31,0x00,0x00,0x7F,
                        0x00,0x01,0x00,0x41,0x00,0x00,0x7F,0x00,0x10,0x01,0x00,0x02,0x00,0x00,0x7F,0x00,
                        0x01,0x00,0x12,0x00,0x7F,0x00,0x00,0x01,0x00,0x22,0x00,0x7F,0x00,0x00,0x01,0x00,
                        0x32,0x00,0x7F,0x00,0x01,0x00,0x00,0x42,0x00,0x7F,0x00,0x10,0x01,0x00,0x00,0x03,
                        0x00,0x7F,0x00,0x01,0x00,0x00,0x13,0x00,0x7F,0x00,0x01,0x00,0x23,0x00,0x00,0x7F,
                        0x00,0x01,0x00,0x33,0x00,0x00,0x7F,0x00,0x01,0x00,0x43,0x00,0x7F,0x00,0x00,0x10,
                        0x01,0x00,0x04,0x00,0x7F,0x00,0x00,0x01,0x00,0x14,0x00,0x7F,0x00,0x00,0x01,0x00,
                        0x24,0x00,0x7F,0x00,0x01,0x00,0x00,0x34,0x00,0x7F,0x00,0x01,0x00,0x00,0x44,0x00,
                        0x7F,0x00,0x10,0x01,0x00,0x00,0x05,0x00,0x7F,0x00,0x01,0x00,0x15,0x00,0x00,0x7F,
                        0x00,0x01,0x00,0x25,0x00,0x00,0x7F,0x00,0x01,0x00,0x35,0x00,0x7F,0x00,0x00,0x01,
                        0x00,0x45,0x00,0x7F,0x00,0x00,0x10,0x01,0x00,0x06,0x00,0x7F,0x00,0x00,0x01,0x00,
                        0x16,0x00,0x7F,0x00,0x01,0x00,0x00,0x26,0x00,0x7F,0x00,0x01,0x00,0x00,0x36,0x00,
                        0x7F,0x00,0x01,0x00,0x46,0x00,0x00,0x7F,0x00,0x10,0x01,0x00,0x07,0x00,0x00,0x7F,
                        0x00,0x01,0x00,0x17,0x00,0x00,0x7F,0x00,0x01,0x00,0x27,0x00,0x7F,0x00,0x00,0x01,
                        0x00,0x37,0x00,0x7F,0x00,0x00,0x01,0x00,0x47,0x00,0x7F,0x00,0x10,0x00,0x01,0x00,
                        0x3A,0x00,0x7F,0x00,0x01,0x00,0x00,0x3B,0x00,0x7F,0x00,0x01,0x00,0x00,0x2E,0x00,
                        0x7F,0x00,0x01,0x00,0x3C,0x00,0x00,0x7F,0x00,0x01,0x00,0x3D,0x00,0x00,0x7F,0x00,
                        0x01,0x00,0x3E,0x00,0x7F,0x00,0x00,0x01,0x00,0x2B,0x00,0x7F,0x00,0x00,0x01,0x00,
                        0x2C,0x00,0x7F,0x00,0x01,0x00,0x00,0x2A,0x00,0x7F,0x00,0x01,0x00,0x00,0x29,0x00,
                        0x7F,0x00,0x01,0x00,0x2D,0x00,0x00,0x7F,0x00,0x7F,0x7F,0x7F,0x7F,0x00,0x7F,0x00,
                        0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                        0x00,0xF7]);
                    // Inquiry Message Request
                    finalOutput.value.send([0xF0,0x7E,0x7F,0x06,0x01,0xF7]);
                    // (2) Scene Write Request
                    finalOutput.value.send([0xF0,0x42,0x40,0x00,0x01,0x13,0x00,0x1F,0x11,0x00,0xF7]);
                    for (var i = 0; i < 8; i++) {
                        setTimeout(function(i) {
                            finalOutput.value.send(new Uint8Array([176, 32 + i, 0x7F]));
                        }.bind(null, i), 1000 + i * 70);
                        setTimeout(function(i) {
                            finalOutput.value.send(new Uint8Array([176, 32 + i, 0x00]));
                        }.bind(null, i), 1200 + i * 70);

                        setTimeout(function(i) {
                            finalOutput.value.send(new Uint8Array([176, 48 + i, 0x7F]));
                        }.bind(null, i), 1000 + 100 + i * 70);
                        setTimeout(function(i) {
                            finalOutput.value.send(new Uint8Array([176, 48 + i, 0x00]));
                        }.bind(null, i), 1200 + 100 + i * 70);

                        setTimeout(function(i) {
                            finalOutput.value.send(new Uint8Array([176, 64 + i, 0x7F]));
                        }.bind(null, i), 1000 + 100 * 2 + i * 70);
                        setTimeout(function(i) {
                            finalOutput.value.send(new Uint8Array([176, 64 + i, 0x00]));
                        }.bind(null, i), 1200 + 100 * 2 + i * 70);
                    }
                }

            }.bind(this), function() {
                console.error("No access to MIDI devices");
            });
        } else {
            console.error("No MIDI support");
        }

    },

    getFocusNode: getFocusNode,
    focusSelector: focusSelector,
    addLine: addLine,
    deleteLine: deleteLine

};
